#!/usr/bin/env ruby
require 'json'
require 'base64'
data = STDIN.read
parts = data.split('.')
if parts.size != 3
  STDERR.puts 'JWT malformed: missing three period-separated sections'
  exit 1
end

parts.map! { |part| Base64.decode64 part }

jwt = {
  header: parts[0],
  body: parts[1],
  signature: parts[2]
}

def format_json(jsonstr)
  obj = JSON.parse(jsonstr)
  JSON.pretty_generate(obj)
end

STDERR.puts 'JWT data:'
jwt.each do |section, jsonstr|
  STDERR.puts section
  if section == :signature
    if jsonstr.start_with? '{'
      STDOUT.puts format_json(jsonstr)
    else
      STDERR.puts 'Signature is binary, not printing.'
    end
  else
    STDOUT.puts format_json(jsonstr)
  end
end
