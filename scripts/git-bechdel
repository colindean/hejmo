#!/bin/bash

### Bechdel Test for Software
#
## What is the Bechdel Test for Software?
#
# https://en.wikipedia.org/wiki/Bechdel_test#Bechdel_test_for_software
#
# This tool doesn't really get it 100% right on, because I just don't know
# enough about static analysis nor can I learn enough in the one night I can
# devote to this little project!
#
# So, this little ditty just collects all of the authors in a git repo and
# reports some statistics based on a map of author to gender.
#
## Genderfile format
#
# Genderfile is really two columns: a gender indicator and an author name. e.g.
#
#     M Colin Dean
#     F Jennifer Manning
#
# There's no limitation on what can be used as the indicator.

OLDIFS="$IFS"
IFS=$'\n'

declare -A GENDERMAP

function trim() {
  echo "$@" | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
}

function load_genderfile() {
  while read -r -d $'\t' -a author; do
    GENDERMAP[$author[1]] = $author[0]
  done < (~/.git/Genderfile)
}

function genderLookup() {
  $GENDERMAP[$1]
}

COUNT_TO_AUTHOR=$(git log --format='%aN' | sort | uniq -c)
TOTAL_COMMITS=$(git rev-list HEAD --count)

for author in $COUNT_TO_AUTHOR; do
  count_raw=$(echo $author | awk '{print $1}')
  author_raw=$(echo $author | awk '{$1=""; print $0}')
  count=$(trim $count_raw)
  author=$(trim $author_raw)

  gender=$(genderLookup "$author")
  echo "$author is $gender and has $count commits."
done

echo $total_commits total commits
